{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","httpClient","fb","interacting","interactingDone","usernameControl","required","passwordControl","formGroup","group","username","password","valid","error","post","value","subscribe","next","res","console","log","undefined","err","login","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Component } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  error?: string;\n  interacting = false;\n  interactingDone = false;\n  formGroup: FormGroup;\n  usernameControl = new FormControl(\"\", Validators.required);\n  passwordControl = new FormControl(\"\", Validators.required);\n\n  constructor(private httpClient: HttpClient, private fb: FormBuilder) {\n    this.formGroup = this.fb.group({\n      username: this.usernameControl,\n      password: this.passwordControl,\n    });\n  }\n\n  login(): void {\n    this.interactingDone = false;\n\n    if (!this.formGroup.valid) {\n      this.error = \"Bitte fÃ¼lle Usernamen und Passwort aus!\";\n      return;\n    }\n\n    this.interacting = true;\n    this.httpClient\n      .post(\"/api/interact\", {\n        username: this.usernameControl.value,\n        password: this.passwordControl.value,\n      })\n      .subscribe({\n        next: (res) => {\n          console.log(\"DONE\");\n          this.error = undefined;\n          this.interacting = false;\n          this.interactingDone = true;\n        },\n        error: (err: HttpErrorResponse) => {\n          this.error = err.error;\n          this.interacting = false;\n          this.interactingDone = false;\n        },\n      });\n  }\n}\n","<form [formGroup]=\"formGroup\">\n  <div>\n    <input type=\"text\" placeholder=\"username\" formControlName=\"username\" />\n  </div>\n  <div>\n    <input type=\"password\" placeholder=\"password\" formControlName=\"password\" />\n  </div>\n  <div><button type=\"submit\" (click)=\"login()\">Login</button></div>\n</form>\n\n<ng-container *ngIf=\"interacting\">\n  <p>Und los gehts!</p>\n</ng-container>\n\n<ng-container *ngIf=\"interactingDone\">\n  <p>Alles erledigt!</p>\n</ng-container>\n\n<ng-container *ngIf=\"error\">\n  <p>{{ error }}</p>\n</ng-container>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}