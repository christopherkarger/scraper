{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Component } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  error?: string;\n  interacting = false;\n  interactingDone = false;\n  formGroup: FormGroup;\n  usernameControl = new FormControl(\"\", Validators.required);\n  passwordControl = new FormControl(\"\", Validators.required);\n\n  constructor(private httpClient: HttpClient, private fb: FormBuilder) {\n    this.formGroup = this.fb.group({\n      username: this.usernameControl,\n      password: this.passwordControl,\n    });\n  }\n\n  login(): void {\n    this.interactingDone = false;\n\n    if (!this.formGroup.valid) {\n      this.error = \"Bitte fÃ¼lle Usernamen und Passwort aus!\";\n      return;\n    }\n\n    this.interacting = true;\n    this.httpClient\n      .post(\"/api/interact\", {\n        username: this.usernameControl.value,\n        password: this.passwordControl.value,\n      })\n      .subscribe({\n        next: (res) => {\n          console.log(\"DONE\");\n          this.error = undefined;\n          this.interacting = false;\n          this.interactingDone = true;\n        },\n        error: (err: HttpErrorResponse) => {\n          this.error = err.error;\n          this.interacting = false;\n          this.interactingDone = false;\n        },\n      });\n  }\n}\n","<form [formGroup]=\"formGroup\">\n  <div>\n    <input type=\"text\" placeholder=\"username\" formControlName=\"username\" />\n  </div>\n  <div>\n    <input type=\"password\" placeholder=\"password\" formControlName=\"password\" />\n  </div>\n  <div><button type=\"submit\" (click)=\"login()\">Login</button></div>\n</form>\n\n<ng-container *ngIf=\"interacting\">\n  <p>Und los gehts!</p>\n</ng-container>\n\n<ng-container *ngIf=\"interactingDone\">\n  <p>Alles erledigt!</p>\n</ng-container>\n\n<ng-container *ngIf=\"error\">\n  <p>{{ error }}</p>\n</ng-container>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}